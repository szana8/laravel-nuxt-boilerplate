services:
    #PHP Service
    workspace:
        build:
            context: .
            dockerfile: ./api/Dockerfile
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        container_name: ${APP_CONTAINER_NAME}-workspace
        tty: true
        working_dir: /var/www
        command: bash -c 'php artisan migrate && php artisan serve --host 0.0.0.0 --port=${APP_PORT}'
        ports:
            - "${APP_PORT}:${APP_PORT}" #reverb port
        volumes:
            - ./api:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/999-overrides.ini
            - ./docker/php/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
        networks:
            - app-network
        depends_on:
            - mysql
            - redis
            - nuxt

    #Nginx Service
#    nginx:
#        image: nginx:alpine
#        container_name: ${APP_CONTAINER_NAME}-nginx
#        tty: true
#        ports:
#            - '${APP_PORT}:80'
#            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
#            #- '${NUXT_PORT:-3000}:3000'
#        volumes:
#            - ./api:/var/www
#            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
#        environment:
#            - APP_URL=${APP_CONTAINER_NAME}.test
#            - APP_WORKSPACE=${APP_CONTAINER_NAME}-workspace
#        networks:
#            - app-network

    #Nuxt Service
    nuxt:
        build:
            context: .
            dockerfile: ./web/Dockerfile
        container_name: ${APP_CONTAINER_NAME}-nuxt
        tty: true
        # command: bash -c 'npm run dev'
        ports:
            - '${NUXT_PORT:-3000}:3000'
        volumes:
            - ./web:/usr/src/nuxt-app
        networks:
            - app-network

    #MySQL Service
    mysql:
        image: mysql:latest
        container_name: ${APP_CONTAINER_NAME}-db
        tty: true
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=root
        volumes:
            - '~/.${APP_CONTAINER_NAME}/data/mysql:/var/lib/mysql'
        ports:
            - '${DB_PORT}:3306'
        networks:
            - app-network

    # Redis service
    redis:
        image: 'redis:alpine'
        container_name: ${APP_CONTAINER_NAME}-redis
        command: redis-server --requirepass ${REDIS_PASSWORD}
        tty: true
        # ports:
            # - '${REDIS_PORT}:6379'
        networks:
            - app-network

#Docker Networks
networks:
    app-network:
        driver: bridge

#Volumes
volumes:
    dbdata:
        driver: local
